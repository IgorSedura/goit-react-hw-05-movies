{"version":3,"file":"static/js/351.9bf1e2f2.chunk.js","mappings":"kRAEaA,E,QAAYC,GAAAA,IAAH,iD,SCoFtB,EA/EgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KA2BE,OAzBFC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAEuBC,EAAAA,EAAAA,IAAgBN,GAFvC,OAEUO,EAFV,OAIUC,EAASD,EAAKE,QAAQC,KAAI,SAAAC,GAC9B,MAAO,CACLX,GAAIW,EAAKX,GACTY,OAAQD,EAAKC,OACbC,QAASF,EAAKE,QAEjB,IAEDT,EAAWI,GAZf,gDAcIM,EAAAA,GAAAA,MAAY,iDAdhB,0DAJc,sBACTd,GADS,mCAqBde,EACD,GAAE,CAACf,IAGqB,IAAnBG,EAAQa,QACH,sEAIT,SAAClB,EAAD,WACE,wBACGK,EAAQO,KAAI,SAAAO,GACX,OACE,2BACE,wBAAKA,EAAEL,UACP,uBAAIK,EAAEJ,YAFCI,EAAEjB,GAKd,OAiCR,C,mMClFDkB,EAAAA,EAAAA,SAAAA,QAAyB,6BAMzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SALW,QAMXC,KALW,KAQN,IAAMC,EAAiB,mCAAG,oGACRJ,EAAAA,EAAAA,IAAA,uBADQ,cACzBK,EADyB,yBAExBA,EAAShB,MAFe,2CAAH,qDAKjBiB,EAAiB,mCAAG,WAAMxB,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,kBAAqBlB,EAArB,OADQ,cACzByB,EADyB,yBAExBA,EAASlB,MAFe,2CAAH,sDAKjBmB,EAAW,mCAAG,WAAMC,GAAN,uFACFT,EAAAA,EAAAA,IAAA,iCACKS,EADL,yBADE,cACnBJ,EADmB,yBAIlBA,EAAShB,MAJS,2CAAH,sDAOXqB,EAAe,mCAAG,WAAM5B,GAAN,uFACNkB,EAAAA,EAAAA,IAAA,kBAAqBlB,EAArB,eADM,cACvBuB,EADuB,yBAEtBA,EAAShB,MAFa,2CAAH,sDAIfD,EAAe,mCAAG,WAAMN,GAAN,uFACNkB,EAAAA,EAAAA,IAAA,kBAAqBlB,EAArB,gBADM,cACvBuB,EADuB,yBAGtBA,EAAShB,MAHa,2CAAH,qD","sources":["components/Reviews/ReviewsStyles.js","components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-bottom: 30px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { toast } from 'react-hot-toast';\nimport { getMovieReviews } from 'services/Api';\nimport { Container } from './ReviewsStyles';\n\nconst Reviews = () => {\n  const { id } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    async function getActors() {\n      try {\n        const data = await getMovieReviews(id);\n\n        const review = data.results.map(item => {\n          return {\n            id: item.id,\n            author: item.author,\n            content: item.content,\n          };\n        });\n\n        setReviews(review);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n      }\n    }\n    getActors();\n  }, [id]);\n  // eslint-disable-next-line no-lone-blocks\n  {\n    if (reviews.length === 0) {\n      return <p>We don't have any reviews for this movie.</p>;\n    }\n  }\n  return (\n    <Container>\n      <ul>\n        {reviews.map(a => {\n          return (\n            <li key={a.id}>\n              <h3>{a.author}</h3>\n              <p>{a.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n    //     <div>\n    //       <ActorList>\n    //         {actors.map(a => {\n    //           return (\n    //             <ActorItem key={a.id}>\n    //               {a.img ? (\n    //                 <Img\n    //                   src={`https://image.tmdb.org/t/p/w500${a.img}`}\n    //                   alt={a.name}\n    //                   width={120}\n    //                 />\n    //               ) : (\n    //                 <Img\n    //                   src={`https://aeroclub-issoire.fr/wp-content/uploads/2020/05/image-not-found.jpg`}\n    //                   alt={a.name}\n    //                   width={120}\n    //                 />\n    //               )}\n    //               <div>\n    //                 <h3>{a.name}</h3>\n    //                 <p>\n    //                   <i>{a.character}</i>\n    //                 </p>\n    //               </div>\n    //             </ActorItem>\n    //           );\n    //         })}\n    //       </ActorList>\n    //     </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '1ea490a87cdb6e5e1307c3207f6746f9';\nconst lang = 'en-US';\nconst page = '1';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n  page: page,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?`);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(`3/movie/${id}?&`);\n  return responce.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `3/search/movie?&&query=${query}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`3/movie/${id}/credits?&`);\n  return response.data;\n};\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`3/movie/${id}/reviews?&&`);\n\n  return response.data;\n};\n"],"names":["Container","styled","id","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","data","review","results","map","item","author","content","toast","getActors","length","a","axios","api_key","language","page","getTrendingMovies","response","fetchMovieDetails","responce","searchMovie","query","getMovieCredits"],"sourceRoot":""}
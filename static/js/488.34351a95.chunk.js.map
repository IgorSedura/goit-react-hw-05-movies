{"version":3,"file":"static/js/488.34351a95.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,kBACVM,EADU,oBACIL,EADJ,oBADQ,cACzBM,EADyB,yBAIxBA,EAASH,MAJe,2CAAH,sDAOjBI,EAAW,mCAAG,WAAMC,GAAN,uFACFT,EAAAA,EAAAA,IAAA,iCACKC,EADL,iCACqCQ,EADrC,gCADE,cACnBN,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOXM,EAAe,mCAAG,WAAMJ,GAAN,uFACNN,EAAAA,EAAAA,IAAA,kBACVM,EADU,4BACYL,EADZ,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfO,EAAe,mCAAG,WAAML,GAAN,uFACNN,EAAAA,EAAAA,IAAA,kBACVM,EADU,4BACYL,EADZ,2BADM,cACvBE,EADuB,yBAKtBA,EAASC,MALa,2CAAH,qD,gKC7BfQ,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,aACf,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAML,GAAYM,GAAE,kBAAaH,EAAMX,IAAtD,mBACGW,EAAMI,aADT,QACkBJ,EAAMK,QAFjBL,EAAMX,GADA,KAStB,E,iDCbYiB,EAAkBC,EAAAA,GAAAA,OAAH,+RAgBfC,EAAaD,EAAAA,GAAAA,KAAH,0MAWVE,EAAmBF,EAAAA,GAAAA,OAAH,y+BA2ChBG,EAAkBH,EAAAA,GAAAA,KAAH,6MAYfI,EAAkBJ,EAAAA,GAAAA,MAAH,qSCf5B,EAtDkB,WAChB,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,EAAQuB,EAAaE,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE8B3B,EAAAA,EAAAA,IAAYC,GAF1C,gBAEY2B,EAFZ,EAEYA,QACRN,EAAUM,GACVA,EAAQC,OAAS,EACbP,EAAUM,GACVE,EAAAA,GAAAA,MAAA,wEACmE7B,IAP3E,0GAJc,sBACTA,GADS,mCAgBd8B,EACD,GAAE,CAAC9B,IAKJ,OACE,iCACE,SAACc,EAAD,WAEE,UAACE,EAAD,CAAYe,SARG,SAAC,GAAe,IAAb/B,EAAY,EAAZA,MACtBwB,EAAgBxB,EACjB,EAMK,WACE,SAACmB,EAAD,CACEa,KAAK,OACLnB,KAAK,QACLoB,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,UAAQ,KAEV,UAACnB,EAAD,YACE,SAAC,KAAD,KACA,SAAC,MAAD,KACA,SAACC,EAAD,8BAKN,SAACf,EAAD,CAAWC,OAAQA,MAGxB,C","sources":["Api.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBarStyles.js","components/SearchBar/SearchBar.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '1ea490a87cdb6e5e1307c3207f6746f9';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n            {movie.title ?? movie.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchbarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  align-items: flex-start;\n`;\n\nexport const SearchFormButton = styled.button`\n  appearance: none;\n  background-color: transparent;\n  border: 1px solid black;\n  border-radius: 5px;\n  box-sizing: border-box;\n  color: #3b3b3b;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Roobert, -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica,\n    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n  font-size: 16px;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n  min-height: 48px;\n  min-width: 0;\n  outline: none;\n\n  text-align: center;\n  text-decoration: none;\n  transition: all 300ms cubic-bezier(0.23, 1, 0.32, 1);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  width: 100px;\n  margin-left: 10px;\n\n  :disabled {\n    pointer-events: none;\n  }\n\n  :hover {\n    color: #fff;\n    background-color: orangered;\n    /* box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px; */\n  }\n\n  :active {\n    box-shadow: none;\n    transform: translateY(0);\n  }\n`;\nexport const SearchFormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  width: 200px;\n\n  height: 48px;\n  font-size: 18px;\n  bottom: 14px;\n  right: 9px;\n  border-radius: 5px;\n  width: 400px;\n  box-sizing: border-box;\n  padding: 0 18px;\n\n  margin-bottom: 10px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { searchMovie } from 'Api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport { useSearchParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport {\n  SearchbarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormLabel,\n  SearchFormInput,\n} from './SearchBarStyles';\n\nconst SearchBar = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function getMovie() {\n      try {\n        const { results } = await searchMovie(query);\n        setMovies(results);\n        results.length > 0\n          ? setMovies(results)\n          : toast.error(\n              `Sorry! We couldn't find any movies matching your search query ${query}`\n            );\n      } catch (error) {}\n    }\n\n    getMovie();\n  }, [query]);\n  const handleSubmit = ({ query }) => {\n    setSearchParams(query);\n  };\n\n  return (\n    <>\n      <SearchbarHeader>\n        {/* {isLoading && <Loader />} */}\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormInput\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            required\n          />\n          <SearchFormButton>\n            <Toaster />\n            <FiSearch />\n            <SearchFormLabel>Search</SearchFormLabel>\n          </SearchFormButton>\n          {/* <Toaster /> */}\n        </SearchForm>\n      </SearchbarHeader>\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default SearchBar;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","fetchMovieDetails","id","responce","searchMovie","query","getMovieCredits","getMovieReviews","MovieList","movies","location","useLocation","map","movie","state","from","to","title","name","SearchbarHeader","styled","SearchForm","SearchFormButton","SearchFormLabel","SearchFormInput","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","results","length","toast","getMovie","onSubmit","type","autoComplete","autoFocus","placeholder","required"],"sourceRoot":""}
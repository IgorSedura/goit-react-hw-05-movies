{"version":3,"file":"static/js/214.7db8a89f.chunk.js","mappings":"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","sources":["Api.js","components/Loader/Loader.jsx","components/Button/ButtonStyles.js","components/Button/Button.jsx","pages/MovieDetails/MovieDetailsStyles.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '1ea490a87cdb6e5e1307c3207f6746f9';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n    />\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackButton = styled(Link)`\n  appearance: none;\n  background-color: transparent;\n  border: 2px solid black;\n  border-radius: 5px;\n  box-sizing: border-box;\n  color: #3b3b3b;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Roobert, -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica,\n    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n  font-size: 16px;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n  min-height: 20px;\n  min-width: 80px;\n  outline: none;\n  margin-bottom: 10px;\n\n  text-align: center;\n  text-decoration: none;\n  transition: all 300ms cubic-bezier(0.23, 1, 0.32, 1);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  width: 100px;\n  margin-left: 10px;\n\n  :disabled {\n    pointer-events: none;\n  }\n\n  :hover {\n    color: #fff;\n    background-color: orangered;\n  }\n`;\n","import { GoBackButton } from './ButtonStyles';\n\nexport const Button = ({ backLinkHref }) => {\n  return <GoBackButton to={backLinkHref}>Go back</GoBackButton>;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n\n  border-bottom: 1px solid black;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-left: 50px;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 300px;\n  border-radius: 5px;\n  margin-bottom: 16px;\n`;\n\nexport const Information = styled.div`\n  border-bottom: 1px solid black;\n`;\n\nexport const InformationList = styled.ul`\n  margin-bottom: 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchMovieDetails } from 'Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Button } from 'components/Button/Button';\nimport {\n  Container,\n  MovieInfo,\n  MoviePoster,\n  Information,\n  InformationList,\n} from './MovieDetailsStyles';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const { id } = params;\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    async function getMovie() {\n      try {\n        setIsLoading(true);\n\n        const results = await fetchMovieDetails(id);\n\n        setMovieDetails(results);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovie();\n  }, [id]);\n  const { title, poster_path, vote_average, overview, genres } = movieDetails;\n  const percent = (vote_average * 100) / 10;\n  return (\n    <>\n      <Button backLinkHref={backLinkHref} />\n      <Container>\n        <div>\n          {isLoading && <Loader />}\n          {poster_path && (\n            <MoviePoster\n              src={`${BASE_IMG_URL}${poster_path}`}\n              alt=\"Movie poster\"\n            />\n          )}\n          {!poster_path && !isLoading && (\n            <MoviePoster\n              src=\"https://i.ibb.co/4ThsTsv/poster-coming-soon.jpg\"\n              alt=\"Movie poster\"\n            />\n          )}\n        </div>\n        <MovieInfo>\n          <h1>{title}</h1>\n          <p>User score: {percent.toFixed()}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres && genres.map(genre => genre.name).join(', ')}</p>\n        </MovieInfo>\n        <Toaster />\n      </Container>\n      <h3>Additional information</h3>\n      <Information>\n        <InformationList>\n          <li>\n            <Link to={'cast'} state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`reviews`} state={{ from: backLinkHref }}>\n              Reviews\n            </Link>\n          </li>\n        </InformationList>\n      </Information>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","fetchMovieDetails","id","responce","searchMovie","query","getMovieCredits","getMovieReviews","Loader","visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","colors","GoBackButton","styled","Link","Button","backLinkHref","to","Container","MovieInfo","MoviePoster","Information","InformationList","useParams","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","useLocation","state","from","useEffect","results","toast","getMovie","title","poster_path","vote_average","overview","genres","percent","src","alt","toFixed","map","genre","name","join"],"sourceRoot":""}